const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function fixDateFormats() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    console.log('\nüìÖ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ users...');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º created_at –≤ —Ç–∞–±–ª–∏—Ü–µ users
    await prisma.$executeRaw`
      UPDATE users 
      SET created_at = datetime(created_at) || '.000Z'
      WHERE created_at NOT LIKE '%.%' AND created_at NOT LIKE '%Z'
    `;
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ users
    await prisma.$executeRaw`
      UPDATE users 
      SET updated_at = datetime(updated_at) || '.000Z'
      WHERE updated_at NOT LIKE '%.%' AND updated_at NOT LIKE '%Z'
    `;
    
    console.log('‚úÖ –ü–æ–ª—è created_at –∏ updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ users –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    
    console.log('\nüì¶ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ stocks...');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º created_at –≤ —Ç–∞–±–ª–∏—Ü–µ stocks
    await prisma.$executeRaw`
      UPDATE stocks 
      SET created_at = datetime(created_at) || '.000Z'
      WHERE created_at NOT LIKE '%.%' AND created_at NOT LIKE '%Z'
    `;
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ stocks
    await prisma.$executeRaw`
      UPDATE stocks 
      SET updated_at = datetime(updated_at) || '.000Z'
      WHERE updated_at NOT LIKE '%.%' AND updated_at NOT LIKE '%Z'
    `;
    
    console.log('‚úÖ –ü–æ–ª—è created_at –∏ updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ stocks –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    
    console.log('\nüéÅ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookahs...');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º created_at –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookahs
    await prisma.$executeRaw`
      UPDATE free_hookahs 
      SET created_at = datetime(created_at) || '.000Z'
      WHERE created_at NOT LIKE '%.%' AND created_at NOT LIKE '%Z'
    `;
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º used_at –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookahs
    await prisma.$executeRaw`
      UPDATE free_hookahs 
      SET used_at = datetime(used_at) || '.000Z'
      WHERE used_at NOT LIKE '%.%' AND used_at NOT LIKE '%Z' AND used_at IS NOT NULL
    `;
    
    console.log('‚úÖ –ü–æ–ª—è created_at –∏ used_at –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookahs –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    
    console.log('\nüìù –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ hookah_history...');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º created_at –≤ —Ç–∞–±–ª–∏—Ü–µ hookah_history
    await prisma.$executeRaw`
      UPDATE hookah_history 
      SET created_at = datetime(created_at) || '.000Z'
      WHERE created_at NOT LIKE '%.%' AND created_at NOT LIKE '%Z' AND created_at IS NOT NULL
    `;
    
    console.log('‚úÖ –ü–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü–µ hookah_history –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
    
    console.log('\nüëë –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ admins...');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º created_at –≤ —Ç–∞–±–ª–∏—Ü–µ admins
    await prisma.$executeRaw`
      UPDATE admins 
      SET created_at = datetime(created_at) || '.000Z'
      WHERE created_at NOT LIKE '%.%' AND created_at NOT LIKE '%Z'
    `;
    
    console.log('‚úÖ –ü–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü–µ admins –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
    
    console.log('\nüìã –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ admin_list...');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º created_at –≤ —Ç–∞–±–ª–∏—Ü–µ admin_list
    await prisma.$executeRaw`
      UPDATE admin_list 
      SET created_at = datetime(created_at) || '.000Z'
      WHERE created_at NOT LIKE '%.%' AND created_at NOT LIKE '%Z'
    `;
    
    console.log('‚úÖ –ü–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü–µ admin_list –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
    
    console.log('\nüé´ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookah_requests...');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º created_at –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookah_requests
    await prisma.$executeRaw`
      UPDATE free_hookah_requests 
      SET created_at = datetime(created_at) || '.000Z'
      WHERE created_at NOT LIKE '%.%' AND created_at NOT LIKE '%Z'
    `;
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookah_requests
    await prisma.$executeRaw`
      UPDATE free_hookah_requests 
      SET updated_at = datetime(updated_at) || '.000Z'
      WHERE updated_at NOT LIKE '%.%' AND updated_at NOT LIKE '%Z'
    `;
    
    console.log('‚úÖ –ü–æ–ª—è created_at –∏ updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookah_requests –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    
    console.log('\n‚≠ê –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ hookah_reviews...');
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º created_at –≤ —Ç–∞–±–ª–∏—Ü–µ hookah_reviews
    await prisma.$executeRaw`
      UPDATE hookah_reviews 
      SET created_at = datetime(created_at) || '.000Z'
      WHERE created_at NOT LIKE '%.%' AND created_at NOT LIKE '%Z'
    `;
    
    console.log('‚úÖ –ü–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü–µ hookah_reviews –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
    
    console.log('\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–ø–µ—Ä—å Prisma –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Prisma...');
    try {
      const testUsers = await prisma.user.findMany({
        take: 3,
        select: {
          id: true,
          first_name: true,
          last_name: true,
          created_at: true,
          updated_at: true
        }
      });
      console.log('‚úÖ Prisma —É—Å–ø–µ—à–Ω–æ —á–∏—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ!');
      console.log('–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:');
      testUsers.forEach((user, index) => {
        console.log(`   ${index + 1}. ${user.first_name} ${user.last_name}: created_at=${user.created_at}, updated_at=${user.updated_at}`);
      });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Prisma:', error.message);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞—Ç:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixDateFormats();