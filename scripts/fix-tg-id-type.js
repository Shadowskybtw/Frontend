const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function fixTgIdType() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø –ø–æ–ª—è tg_id –Ω–∞ BIGINT...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º raw SQL –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –∫–æ–ª–æ–Ω–∫–∏
    console.log('\nüìù –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø tg_id –≤ —Ç–∞–±–ª–∏—Ü–µ users...');
    await prisma.$executeRaw`ALTER TABLE users ALTER COLUMN tg_id TYPE BIGINT`;
    console.log('‚úÖ –ü–æ–ª–µ tg_id –≤ —Ç–∞–±–ª–∏—Ü–µ users –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ BIGINT');
    
    console.log('\nüìù –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø tg_id –≤ —Ç–∞–±–ª–∏—Ü–µ admin_list...');
    await prisma.$executeRaw`ALTER TABLE admin_list ALTER COLUMN tg_id TYPE BIGINT`;
    console.log('‚úÖ –ü–æ–ª–µ tg_id –≤ —Ç–∞–±–ª–∏—Ü–µ admin_list –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ BIGINT');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ–ª—å—à–∏–º TG ID...');
    
    try {
      const testUser = await prisma.user.create({
        data: {
          tg_id: 6922083035,
          first_name: '–¢–µ—Å—Ç',
          last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          username: 'testuser',
          phone: '+79999999999'
        }
      });
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –±–æ–ª—å—à–∏–º TG ID —Å–æ–∑–¥–∞–Ω:', testUser);
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await prisma.user.delete({
        where: { id: testUser.id }
      });
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message);
    }
    
    console.log('\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ tg_id –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ç–∏–ø–∞ tg_id:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixTgIdType();
