const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function fixTgIdType() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø –ø–æ–ª—è tg_id –≤ SQLite...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –í SQLite –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –∫–æ–ª–æ–Ω–∫–∏
    console.log('\nüìù –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–∏–ø–æ–º tg_id...');
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    await prisma.$executeRaw`
      CREATE TABLE users_new (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        tg_id INTEGER NOT NULL UNIQUE,
        first_name TEXT NOT NULL,
        last_name TEXT NOT NULL,
        phone TEXT NOT NULL,
        username TEXT,
        created_at TEXT NOT NULL,
        updated_at TEXT NOT NULL,
        is_admin INTEGER DEFAULT 0,
        total_purchases INTEGER DEFAULT 0,
        total_regular_purchases INTEGER DEFAULT 0,
        total_free_purchases INTEGER DEFAULT 0
      )
    `;
    console.log('‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ users_new —Å–æ–∑–¥–∞–Ω–∞');
    
    // –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã –≤ –Ω–æ–≤—É—é
    await prisma.$executeRaw`
      INSERT INTO users_new 
      SELECT * FROM users
    `;
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É');
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É
    await prisma.$executeRaw`DROP TABLE users`;
    console.log('‚úÖ –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ users —É–¥–∞–ª–µ–Ω–∞');
    
    // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
    await prisma.$executeRaw`ALTER TABLE users_new RENAME TO users`;
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞');
    
    // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É admin_list
    console.log('\nüìù –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É admin_list...');
    
    await prisma.$executeRaw`
      CREATE TABLE admin_list_new (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        tg_id INTEGER NOT NULL UNIQUE,
        created_at TEXT NOT NULL
      )
    `;
    
    await prisma.$executeRaw`
      INSERT INTO admin_list_new 
      SELECT * FROM admin_list
    `;
    
    await prisma.$executeRaw`DROP TABLE admin_list`;
    await prisma.$executeRaw`ALTER TABLE admin_list_new RENAME TO admin_list`;
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ admin_list –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ–ª—å—à–∏–º TG ID...');
    
    try {
      const testUser = await prisma.user.create({
        data: {
          tg_id: 6922083035,
          first_name: '–¢–µ—Å—Ç',
          last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          username: 'testuser',
          phone: '+79999999999'
        }
      });
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –±–æ–ª—å—à–∏–º TG ID —Å–æ–∑–¥–∞–Ω:', testUser);
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await prisma.user.delete({
        where: { id: testUser.id }
      });
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message);
    }
    
    console.log('\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ tg_id –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ç–∏–ø–∞ tg_id:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixTgIdType();
