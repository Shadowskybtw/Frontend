const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function debugGetAllUsers() {
  try {
    console.log('üîç –û—Ç–ª–∞–¥–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ getAllUsers...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ created_at
    console.log('\nüìã –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const users = await prisma.user.findMany({
      orderBy: { id: 'desc' },
      select: {
        id: true,
        tg_id: true,
        first_name: true,
        last_name: true,
        phone: true,
        username: true
      }
    });
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
    
    users.forEach((user, index) => {
      const phoneDigits = user.phone.replace(/\D/g, '');
      const last4 = phoneDigits.slice(-4);
      console.log(`   ${index + 1}. ${user.first_name} ${user.last_name} (TG: ${user.tg_id}): ${user.phone} (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 4: ${last4})`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É 6642
    console.log('\nüîç –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 4 —Ü–∏—Ñ—Ä–∞–º–∏ 6642...');
    const targetUser = users.find(u => {
      const phoneDigits = u.phone.replace(/\D/g, '');
      return phoneDigits.endsWith('6642');
    });
    
    if (targetUser) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${targetUser.first_name} ${targetUser.last_name} (TG: ${targetUser.tg_id})`);
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 4 —Ü–∏—Ñ—Ä–∞–º–∏ 6642 –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    console.log('\nüéâ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ getAllUsers:', error);
  } finally {
    await prisma.$disconnect();
  }
}

debugGetAllUsers();
