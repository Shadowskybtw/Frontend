const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function fixTimestampFields() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—è timestamp –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ timestamp –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö –≤ ISO —Å—Ç—Ä–æ–∫—É
    function convertTimestamp(timestamp) {
      if (typeof timestamp === 'string' && /^\d{13}$/.test(timestamp)) {
        // –≠—Ç–æ timestamp –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        return new Date(parseInt(timestamp)).toISOString();
      } else if (typeof timestamp === 'string' && /^\d{10}$/.test(timestamp)) {
        // –≠—Ç–æ timestamp –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        return new Date(parseInt(timestamp) * 1000).toISOString();
      }
      return timestamp; // –£–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    }
    
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å timestamp –ø–æ–ª—è–º–∏...');
    
    // 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
    console.log('\nüë• –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É users...');
    const usersResult = await prisma.$queryRaw`
      SELECT id, created_at, updated_at 
      FROM users 
      WHERE created_at LIKE '%1%' OR updated_at LIKE '%1%'
      LIMIT 5
    `;
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ timestamp: ${usersResult.length}`);
    
    if (usersResult.length > 0) {
      console.log('–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:');
      usersResult.forEach((user, index) => {
        console.log(`   ${index + 1}. ID: ${user.id}, created_at: ${user.created_at}, updated_at: ${user.updated_at}`);
      });
      
      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º created_at
      await prisma.$executeRaw`
        UPDATE users 
        SET created_at = datetime(created_at/1000, 'unixepoch')
        WHERE created_at LIKE '%1%' AND length(created_at) = 13
      `;
      
      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º updated_at
      await prisma.$executeRaw`
        UPDATE users 
        SET updated_at = datetime(updated_at/1000, 'unixepoch')
        WHERE updated_at LIKE '%1%' AND length(updated_at) = 13
      `;
      
      console.log('‚úÖ –ü–æ–ª—è created_at –∏ updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ users –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    }
    
    // 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É stocks
    console.log('\nüì¶ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É stocks...');
    const stocksResult = await prisma.$queryRaw`
      SELECT id, created_at, updated_at 
      FROM stocks 
      WHERE created_at LIKE '%1%' OR updated_at LIKE '%1%'
      LIMIT 5
    `;
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ timestamp: ${stocksResult.length}`);
    
    if (stocksResult.length > 0) {
      await prisma.$executeRaw`
        UPDATE stocks 
        SET created_at = datetime(created_at/1000, 'unixepoch')
        WHERE created_at LIKE '%1%' AND length(created_at) = 13
      `;
      
      await prisma.$executeRaw`
        UPDATE stocks 
        SET updated_at = datetime(updated_at/1000, 'unixepoch')
        WHERE updated_at LIKE '%1%' AND length(updated_at) = 13
      `;
      
      console.log('‚úÖ –ü–æ–ª—è created_at –∏ updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ stocks –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    }
    
    // 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É free_hookahs
    console.log('\nüéÅ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É free_hookahs...');
    const freeHookahsResult = await prisma.$queryRaw`
      SELECT id, created_at, used_at 
      FROM free_hookahs 
      WHERE created_at LIKE '%1%' OR used_at LIKE '%1%'
      LIMIT 5
    `;
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ timestamp: ${freeHookahsResult.length}`);
    
    if (freeHookahsResult.length > 0) {
      await prisma.$executeRaw`
        UPDATE free_hookahs 
        SET created_at = datetime(created_at/1000, 'unixepoch')
        WHERE created_at LIKE '%1%' AND length(created_at) = 13
      `;
      
      await prisma.$executeRaw`
        UPDATE free_hookahs 
        SET used_at = datetime(used_at/1000, 'unixepoch')
        WHERE used_at LIKE '%1%' AND length(used_at) = 13
      `;
      
      console.log('‚úÖ –ü–æ–ª—è created_at –∏ used_at –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookahs –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    }
    
    // 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É hookah_history
    console.log('\nüìù –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É hookah_history...');
    const historyResult = await prisma.$queryRaw`
      SELECT id, created_at 
      FROM hookah_history 
      WHERE created_at LIKE '%1%'
      LIMIT 5
    `;
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ timestamp: ${historyResult.length}`);
    
    if (historyResult.length > 0) {
      await prisma.$executeRaw`
        UPDATE hookah_history 
        SET created_at = datetime(created_at/1000, 'unixepoch')
        WHERE created_at LIKE '%1%' AND length(created_at) = 13
      `;
      
      console.log('‚úÖ –ü–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü–µ hookah_history –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
    }
    
    // 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É admins
    console.log('\nüëë –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É admins...');
    const adminsResult = await prisma.$queryRaw`
      SELECT id, created_at 
      FROM admins 
      WHERE created_at LIKE '%1%'
      LIMIT 5
    `;
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ timestamp: ${adminsResult.length}`);
    
    if (adminsResult.length > 0) {
      await prisma.$executeRaw`
        UPDATE admins 
        SET created_at = datetime(created_at/1000, 'unixepoch')
        WHERE created_at LIKE '%1%' AND length(created_at) = 13
      `;
      
      console.log('‚úÖ –ü–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü–µ admins –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
    }
    
    // 6. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É admin_list
    console.log('\nüìã –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É admin_list...');
    const adminListResult = await prisma.$queryRaw`
      SELECT id, created_at 
      FROM admin_list 
      WHERE created_at LIKE '%1%'
      LIMIT 5
    `;
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ timestamp: ${adminListResult.length}`);
    
    if (adminListResult.length > 0) {
      await prisma.$executeRaw`
        UPDATE admin_list 
        SET created_at = datetime(created_at/1000, 'unixepoch')
        WHERE created_at LIKE '%1%' AND length(created_at) = 13
      `;
      
      console.log('‚úÖ –ü–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü–µ admin_list –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
    }
    
    // 7. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É free_hookah_requests
    console.log('\nüé´ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É free_hookah_requests...');
    const requestsResult = await prisma.$queryRaw`
      SELECT id, created_at, updated_at 
      FROM free_hookah_requests 
      WHERE created_at LIKE '%1%' OR updated_at LIKE '%1%'
      LIMIT 5
    `;
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ timestamp: ${requestsResult.length}`);
    
    if (requestsResult.length > 0) {
      await prisma.$executeRaw`
        UPDATE free_hookah_requests 
        SET created_at = datetime(created_at/1000, 'unixepoch')
        WHERE created_at LIKE '%1%' AND length(created_at) = 13
      `;
      
      await prisma.$executeRaw`
        UPDATE free_hookah_requests 
        SET updated_at = datetime(updated_at/1000, 'unixepoch')
        WHERE updated_at LIKE '%1%' AND length(updated_at) = 13
      `;
      
      console.log('‚úÖ –ü–æ–ª—è created_at –∏ updated_at –≤ —Ç–∞–±–ª–∏—Ü–µ free_hookah_requests –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    }
    
    // 8. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É hookah_reviews
    console.log('\n‚≠ê –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É hookah_reviews...');
    const reviewsResult = await prisma.$queryRaw`
      SELECT id, created_at 
      FROM hookah_reviews 
      WHERE created_at LIKE '%1%'
      LIMIT 5
    `;
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ timestamp: ${reviewsResult.length}`);
    
    if (reviewsResult.length > 0) {
      await prisma.$executeRaw`
        UPDATE hookah_reviews 
        SET created_at = datetime(created_at/1000, 'unixepoch')
        WHERE created_at LIKE '%1%' AND length(created_at) = 13
      `;
      
      console.log('‚úÖ –ü–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü–µ hookah_reviews –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
    }
    
    console.log('\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ timestamp –ø–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–ø–µ—Ä—å Prisma –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Prisma...');
    try {
      const testUsers = await prisma.user.findMany({
        take: 3,
        select: {
          id: true,
          first_name: true,
          last_name: true,
          created_at: true,
          updated_at: true
        }
      });
      console.log('‚úÖ Prisma —É—Å–ø–µ—à–Ω–æ —á–∏—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ!');
      console.log('–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:');
      testUsers.forEach((user, index) => {
        console.log(`   ${index + 1}. ${user.first_name} ${user.last_name}: created_at=${user.created_at}, updated_at=${user.updated_at}`);
      });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Prisma:', error.message);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ timestamp –ø–æ–ª–µ–π:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixTimestampFields();
