const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function recreateAdmins() {
  try {
    console.log('üöÄ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...');
    
    // –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ —Å—Ç–∞—Ä–æ–π –±–∞–∑—ã
    const adminTgIds = [
      885843500,
      736766814,
      1159515006,
      2085260735,
      1027936207,
      1347269957,
      610656536,
      883911484,
      6307473739,
      1962719148,
      937011437,
      5916603942,
      5766925451,
      454922712,
      367815510,
      6585577649,
      642604183,
      508089672,
      1016923611
    ];
    
    console.log(`üìù –î–æ–±–∞–≤–ª—è–µ–º ${adminTgIds.length} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...`);
    
    for (const tgId of adminTgIds) {
      try {
        await prisma.adminList.create({
          data: {
            tg_id: tgId,
            created_at: new Date()
          }
        });
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${tgId}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ${tgId}: ${error.message}`);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const adminCount = await prisma.adminList.count();
    console.log(`üìä –ò—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${adminCount}`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const admins = await prisma.adminList.findMany();
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ ${admins.length} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

recreateAdmins();
