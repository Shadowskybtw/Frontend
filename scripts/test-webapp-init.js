const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

async function testWebAppInitialization() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é WebApp...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üìÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
    const homeResponse = await fetch('http://localhost:3000/');
    
    if (homeResponse.ok) {
      console.log('‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞');
      const html = await homeResponse.text();
      
      if (html.includes('UserProvider')) {
        console.log('‚úÖ UserProvider –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
      }
      
      if (html.includes('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è')) {
        console.log('‚úÖ –¢–µ–∫—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å JavaScript
      if (html.includes('error') || html.includes('Error')) {
        console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ JavaScript –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
      }
    } else {
      console.log('‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', homeResponse.status);
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    console.log('üì° –¢–µ—Å—Ç–∏—Ä—É–µ–º API check-or-register...');
    const response = await fetch('http://localhost:3000/api/check-or-register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-telegram-init-data': 'test_init_data'
      },
      body: JSON.stringify({
        tg_id: 937011437,
        firstName: '–ù–∏–∫–æ–ª–∞–π',
        lastName: '–ú–∏—à–∏–Ω',
        username: null
      })
    });
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ API Response:', data);
      
      if (data.success && !data.isNewUser) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ API');
        console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', data.user.first_name, data.user.last_name);
        console.log('üì± –¢–µ–ª–µ—Ñ–æ–Ω:', data.user.phone);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª—å
        console.log('üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –ø—Ä–æ—Ñ–∏–ª—å, –∞ –Ω–µ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é');
      } else {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ API –∏–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
      }
    } else {
      console.log('‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', response.status);
    }
    
    console.log('üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ JavaScript');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ UserContext –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Telegram WebApp –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ WebApp –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ Telegram, –∞ –Ω–µ –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

testWebAppInitialization();
