const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function updateUserData() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å tg_id = 937011437 –∏—Å–ø–æ–ª—å–∑—É—è raw SQL
    const userResult = await prisma.$queryRaw`
      SELECT id, first_name, last_name, phone, username 
      FROM users 
      WHERE tg_id = 937011437
    `;
    
    if (!userResult || userResult.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const user = userResult[0];
    console.log(`üë§ –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`);
    console.log(`   ID: ${user.id}`);
    console.log(`   –ò–º—è: ${user.first_name} ${user.last_name}`);
    console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}`);
    console.log(`   Username: ${user.username}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–∑ Telegram
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º raw SQL —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
    await prisma.$executeRaw`
      UPDATE users 
      SET first_name = '–ù–∏–∫–æ–ª–∞–π', 
          last_name = '–®–∞–¥–æ–≤—Å–∫–∏–π', 
          phone = '+79270036642',
          username = 'shadowskydie'
      WHERE tg_id = 937011437
    `;
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É—è raw SQL
    const updatedUserResult = await prisma.$queryRaw`
      SELECT id, first_name, last_name, phone, username 
      FROM users 
      WHERE tg_id = 937011437
    `;
    const updatedUser = updatedUserResult[0];
    
    console.log(`\n‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã:`);
    console.log(`   ID: ${updatedUser.id}`);
    console.log(`   –ò–º—è: ${updatedUser.first_name} ${updatedUser.last_name}`);
    console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω: ${updatedUser.phone}`);
    console.log(`   Username: ${updatedUser.username}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ stocks –∏ –∏—Å—Ç–æ—Ä–∏—è –æ—Å—Ç–∞–ª–∏—Å—å –∏—Å–ø–æ–ª—å–∑—É—è raw SQL
    const stocksResult = await prisma.$queryRaw`
      SELECT COUNT(*) as count FROM stocks WHERE user_id = ${updatedUser.id}
    `;
    const stocksCount = stocksResult[0].count;
    
    const historyResult = await prisma.$queryRaw`
      SELECT COUNT(*) as count FROM hookah_history WHERE user_id = ${updatedUser.id}
    `;
    const historyCount = historyResult[0].count;
    
    console.log(`\nüìä –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:`);
    console.log(`   üì¶ Stocks: ${stocksCount}`);
    console.log(`   üìù –ò—Å—Ç–æ—Ä–∏—è –∫–∞–ª—å—è–Ω–æ–≤: ${historyCount}`);
    
    console.log('\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  } finally {
    await prisma.$disconnect();
  }
}

updateUserData();
