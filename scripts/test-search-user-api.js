const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

async function testSearchUserAPI() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API search-user...');
    
    const phoneDigits = '6642'; // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –Ω–æ–º–µ—Ä–∞ +79270036642
    const baseUrl = 'http://localhost:3000';
    
    console.log(`üì° –¢–µ—Å—Ç–∏—Ä—É–µ–º GET /api/search-user?phone=${phoneDigits}`);
    
    const response = await fetch(`${baseUrl}/api/search-user?phone=${phoneDigits}`);
    
    console.log(`–°—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText}`);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Search-user API —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log('üìä –î–∞–Ω–Ω—ã–µ:', {
        success: data.success,
        user: data.user ? {
          name: `${data.user.first_name} ${data.user.last_name}`,
          tg_id: data.user.tg_id,
          phone: data.user.phone
        } : null,
        stats: data.stats
      });
      
      if (data.stats) {
        console.log('üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–ª—å—è–Ω–æ–≤:');
        console.log(`   –ó–∞–ø–æ–ª–Ω–µ–Ω–æ —Å–ª–æ—Ç–æ–≤: ${data.stats.slotsFilled}/5`);
        console.log(`   –û—Å—Ç–∞–ª–æ—Å—å –¥–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ: ${data.stats.slotsRemaining}`);
        console.log(`   –ü—Ä–æ–≥—Ä–µ—Å—Å: ${data.stats.progress}%`);
        console.log(`   –ï—Å—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–∞–ª—å—è–Ω: ${data.stats.hasFreeHookah ? '–î–∞' : '–ù–µ—Ç'}`);
      }
    } else {
      const errorText = await response.text();
      console.log('‚ùå Search-user API –æ—à–∏–±–∫–∞:', errorText);
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API search-user:', error);
  }
}

testSearchUserAPI();
