const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function updateStockOrder() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ stocks...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å tg_id = 937011437
    const user = await prisma.user.findUnique({
      where: { tg_id: 937011437 }
    });
    
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.first_name} ${user.last_name} (ID: ${user.id})`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º stock "5+1 –∫–∞–ª—å—è–Ω" —á—Ç–æ–±—ã –æ–Ω –±—ã–ª —Å–∞–º—ã–º –Ω–æ–≤—ã–º
    const stock5Plus1 = await prisma.stock.findFirst({
      where: { 
        user_id: user.id,
        stock_name: '5+1 –∫–∞–ª—å—è–Ω'
      }
    });
    
    if (stock5Plus1) {
      // –û–±–Ω–æ–≤–ª—è–µ–º updated_at —á—Ç–æ–±—ã stock –±—ã–ª –ø–µ—Ä–≤—ã–º –≤ —Å–ø–∏—Å–∫–µ
      await prisma.stock.update({
        where: { id: stock5Plus1.id },
        data: { 
          updated_at: new Date(),
          progress: 80 // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
        }
      });
      
      console.log(`‚úÖ Stock "5+1 –∫–∞–ª—å—è–Ω" –æ–±–Ω–æ–≤–ª–µ–Ω: ID ${stock5Plus1.id}, –ü—Ä–æ–≥—Ä–µ—Å—Å: 80%`);
    } else {
      console.log(`‚ùå Stock "5+1 –∫–∞–ª—å—è–Ω" –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—è–¥–æ–∫ stocks
    console.log('\nüìã –ü–æ—Ä—è–¥–æ–∫ stocks –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    const stocks = await prisma.stock.findMany({
      where: { user_id: user.id },
      orderBy: { updated_at: 'desc' }
    });
    
    stocks.forEach((stock, index) => {
      console.log(`   ${index + 1}. ID: ${stock.id}, –ù–∞–∑–≤–∞–Ω–∏–µ: "${stock.stock_name}", –ü—Ä–æ–≥—Ä–µ—Å—Å: ${stock.progress}%`);
    });
    
    console.log('\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ—Ä—è–¥–∫–∞ stocks:', error);
  } finally {
    await prisma.$disconnect();
  }
}

updateStockOrder();
