const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

async function testWebAppFlow() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Ç–æ–∫ WebApp...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º API check-or-register —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    const response = await fetch('http://localhost:3000/api/check-or-register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-telegram-init-data': 'test_data'
      },
      body: JSON.stringify({
        tg_id: 937011437, // –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω
        firstName: '–¢–µ—Å—Ç–æ–≤—ã–π',
        lastName: '–ê–¥–º–∏–Ω',
        username: 'testadmin'
      })
    });
    
    const data = await response.json();
    console.log('üì° –û—Ç–≤–µ—Ç API:', data);
    
    if (data.success) {
      console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
      console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', data.user);
      console.log('üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', data.isNewUser);
    } else {
      console.log('‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', data.message);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ WebApp:', error);
  }
}

testWebAppFlow();
