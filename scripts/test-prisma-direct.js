const { PrismaClient } = require('@prisma/client');

async function testPrismaDirect() {
  const prisma = new PrismaClient();
  
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é...');
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await prisma.user.findMany();
    console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
    users.forEach(user => {
      console.log(`   - ${user.first_name} ${user.last_name} (TG ID: ${user.tg_id})`);
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    const admins = await prisma.adminList.findMany();
    console.log(`üëë –ù–∞–π–¥–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${admins.length}`);
    admins.forEach(admin => {
      console.log(`   - TG ID: ${admin.tg_id}`);
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∞—Å—ã
    const stocks = await prisma.stock.findMany();
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∞—Å–æ–≤: ${stocks.length}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫–∞–ª—å—è–Ω—ã
    const freeHookahs = await prisma.freeHookah.findMany();
    console.log(`üéÅ –ù–∞–π–¥–µ–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∫–∞–ª—å—è–Ω–æ–≤: ${freeHookahs.length}`);
    
    console.log('üéâ Prisma –∫–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ Prisma –∫–ª–∏–µ–Ω—Ç–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testPrismaDirect();
