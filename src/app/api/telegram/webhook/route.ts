import { NextRequest, NextResponse } from 'next/server'
import { Update } from '@/types/telegram'

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –æ—Ç Telegram
export async function POST(request: NextRequest) {
  try {
    const update: Update = await request.json()
    
    console.log('üì® Received Telegram update:', JSON.stringify(update, null, 2))
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—É /start
    if (update.message?.text === '/start') {
      const user = update.message.from
      console.log(`üë§ User ${user?.first_name} (${user?.id}) started the bot`)
      
      // –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç —Å WebApp –∫–Ω–æ–ø–∫–æ–π
      const response = {
        method: 'sendMessage',
        chat_id: update.message.chat.id,
        text: `üëã –ü—Ä–∏–≤–µ—Ç, ${user?.first_name}!\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DUNGEON Hookah!\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:`,
        reply_markup: {
          inline_keyboard: [[
            {
              text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å WebApp',
              web_app: {
                url: 'https://frontend-delta-sandy-58.vercel.app'
              }
            }
          ]]
        }
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ Telegram Bot API
      const botToken = process.env.BOT_TOKEN
      if (!botToken) {
        throw new Error('BOT_TOKEN not found in environment variables')
      }
      
      const telegramResponse = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(response)
      })
      
      if (!telegramResponse.ok) {
        const errorText = await telegramResponse.text()
        console.error('‚ùå Telegram API error:', errorText)
        throw new Error(`Telegram API error: ${telegramResponse.status}`)
      }
      
      console.log('‚úÖ Response sent successfully')
    }
    
    return NextResponse.json({ ok: true })
    
  } catch (error) {
    console.error('‚ùå Webhook error:', error)
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    )
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ GET –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)
export async function GET() {
  return NextResponse.json({ 
    message: 'Telegram webhook endpoint is working!',
    timestamp: new Date().toISOString()
  })
}