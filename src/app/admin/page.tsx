"use client"
import React, { useState } from 'react'
import { useUser } from '@/contexts/UserContext'

export default function AdminPage() {
  const [qrData, setQrData] = useState('')
  const [targetTgId, setTargetTgId] = useState('')
  const [isScanning, setIsScanning] = useState(false)
  const [isRemoving, setIsRemoving] = useState(false)
  const { user } = useUser()
  const [result, setResult] = useState<{
    success: boolean
    message: string
    user?: {
      id: number
      first_name: string
      last_name: string
    }
    stock?: {
      stock_name: string
      progress: number
    }
    completed?: boolean
  } | null>(null)

  const handleScan = async () => {
    if (!qrData.trim()) {
      alert('–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ QR –∫–æ–¥–∞')
      return
    }

    setIsScanning(true)
    try {
      const response = await fetch('/api/scan-qr', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          qr_data: qrData,
          admin_key: 'admin123' // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ
        }),
      })

      const data = await response.json()
      setResult(data)
      
      if (data.success) {
        alert(`QR –∫–æ–¥ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${data.user.first_name} ${data.user.last_name}`)
        setQrData('') // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
      } else {
        alert('–û—à–∏–±–∫–∞: ' + data.message)
      }
    } catch (error) {
      console.error('Error scanning QR:', error)
      alert('–û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è QR –∫–æ–¥–∞')
    } finally {
      setIsScanning(false)
    }
  }

  const removeLastPurchase = async () => {
    if (!targetTgId.trim()) {
      alert('–£–∫–∞–∂–∏—Ç–µ TG ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      return
    }
    if (!user?.tg_id) {
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å TG ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
      return
    }
    setIsRemoving(true)
    try {
      const res = await fetch('/api/remove-hookah', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          user_tg_id: Number(targetTgId),
          admin_tg_id: Number(user.tg_id),
          hookah_type: 'regular',
          count: 1
        })
      })
      const data = await res.json()
      if (data.success) {
        alert('–ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–∫—É–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞')
      } else {
        alert('–û—à–∏–±–∫–∞: ' + (data.message || '–Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å'))
      }
    } catch (e) {
      console.error(e)
      alert('–°–±–æ–π –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ')
    } finally {
      setIsRemoving(false)
    }
  }

  return (
    <main className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
      <div className="max-w-md w-full bg-white rounded-2xl shadow-xl p-8">
        <div className="text-center">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            üîç –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
          </h1>
          <p className="text-gray-600 mb-8">
            –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ QR –∫–æ–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          </p>

          <div className="space-y-4">
            <div className="bg-gray-50 border border-gray-200 rounded-lg p-4 text-left">
              <h3 className="font-semibold text-gray-900 mb-2">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∞–º–∏</h3>
              <label className="block text-sm font-medium text-gray-700 mb-2">TG ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
              <input
                value={targetTgId}
                onChange={(e) => setTargetTgId(e.target.value)}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 937011437"
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 mb-3"
              />
              <button
                onClick={removeLastPurchase}
                disabled={isRemoving}
                className="w-full bg-purple-600 hover:bg-purple-700 disabled:bg-purple-400 text-white font-semibold py-3 px-6 rounded-lg transition duration-200"
              >
                {isRemoving ? '‚è≥ –£–¥–∞–ª–µ–Ω–∏–µ...' : 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –ø–æ–∫—É–ø–∫—É (regular)'}
              </button>
              <p className="mt-2 text-xs text-gray-500">–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–µ –≤ –ò—Å—Ç–æ—Ä–∏–∏/–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –æ–±–Ω–æ–≤—è—Ç—Å—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ —Ñ–æ–∫—É—Å–∞.</p>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –î–∞–Ω–Ω—ã–µ QR –∫–æ–¥–∞
              </label>
              <textarea
                value={qrData}
                onChange={(e) => setQrData(e.target.value)}
                placeholder="–í—Å—Ç–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ QR –∫–æ–¥–∞ —Å—é–¥–∞..."
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 h-24 resize-none"
              />
            </div>

            <button
              onClick={handleScan}
              disabled={isScanning}
              className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-semibold py-3 px-6 rounded-lg transition duration-200"
            >
              {isScanning ? '‚è≥ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...' : 'üì± –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR –∫–æ–¥'}
            </button>

            {result && (
              <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
                <h3 className="font-semibold text-gray-900 mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h3>
                <div className="text-left space-y-2 text-sm">
                  <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {result.success ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}</p>
                  {result.user && (
                    <>
                      <p><strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong> {result.user.first_name} {result.user.last_name}</p>
                      <p><strong>ID:</strong> {result.user.id}</p>
                    </>
                  )}
                  {result.stock && (
                    <>
                      <p><strong>–ê–∫—Ü–∏—è:</strong> {result.stock.stock_name}</p>
                      <p><strong>–ü—Ä–æ–≥—Ä–µ—Å—Å:</strong> {result.stock.progress}%</p>
                    </>
                  )}
                  {result.completed && (
                    <p className="text-green-600 font-medium">üéâ –ê–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–∞–ª—å—è–Ω!</p>
                  )}
                </div>
              </div>
            )}

            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
              <h3 className="font-semibold text-yellow-900 mb-2">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</h3>
              <div className="text-yellow-800 text-sm space-y-1">
                <p>1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç QR –∫–æ–¥</p>
                <p>2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ QR –∫–æ–¥–∞</p>
                <p>3. –í—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ–ª–µ –≤—ã—à–µ</p>
                <p>4. –ù–∞–∂–º–∏—Ç–µ &quot;–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å&quot;</p>
                <p>5. –°–ª–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  )
}
