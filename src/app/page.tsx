"use client"
import React, { useEffect, useState } from 'react'
import Link from 'next/link'

type TgUser = {
  id: number
  username?: string
  first_name?: string
  last_name?: string
}

type TelegramWebApp = {
  initData: string
  initDataUnsafe?: { user?: TgUser }
}

type TelegramWindow = {
  Telegram?: { WebApp?: TelegramWebApp }
}

declare const window: TelegramWindow & Window

export default function HomePage() {
  const [isInTelegram, setIsInTelegram] = useState(false)
  const [user, setUser] = useState<TgUser | null>(null)

  useEffect(() => {
    // Check if we're inside Telegram WebApp
    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {
      setIsInTelegram(true)
      const tgUser = window.Telegram.WebApp.initDataUnsafe?.user as TgUser | undefined
      if (tgUser) {
        setUser(tgUser)
      }
    }
  }, [])

  const openWebApp = () => {
    const webAppUrl = `${window.location.origin}/register`
    const botUsername = process.env.NEXT_PUBLIC_TG_BOT_USERNAME

    if (typeof window !== 'undefined' && window.Telegram?.WebApp) {
      // We are already inside Telegram WebApp
      window.location.href = webAppUrl
      return
    }

    // Not inside Telegram WebApp: try to open the Telegram app directly if bot username is known
    if (botUsername) {
      const tgDeepLink = `tg://resolve?domain=${encodeURIComponent(botUsername)}&start` as const
      const httpsFallback = `https://t.me/${encodeURIComponent(botUsername)}?start` as const

      // Attempt deep link first (mobile Telegram app), fallback to https
      const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent)
      const openFallback = () => {
        window.location.href = httpsFallback
      }
      try {
        // iOS needs immediate fallback due to lack of onblur on failed deeplink
        if (isIOS) {
          setTimeout(openFallback, 50)
        } else {
          const timeout = setTimeout(openFallback, 500)
          const onBlur = () => clearTimeout(timeout)
          window.addEventListener('blur', onBlur, { once: true })
        }
        window.location.href = tgDeepLink
      } catch {
        openFallback()
      }
      return
    }

    // If bot username is not configured, show the direct URL with instructions
    alert('–û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ Telegram:\n' + webAppUrl)
  }

  return (
    <main className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
      <div className="max-w-md w-full bg-white rounded-2xl shadow-xl p-8">
        <div className="text-center">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!
          </h1>
          <p className="text-gray-600 mb-8">
            –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –Ω–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
          </p>

          {isInTelegram ? (
            <div className="space-y-4">
              {user && (
                <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
                  <p className="text-green-800 text-sm">
                    üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!
                  </p>
                </div>
              )}
              
              <Link 
                href="/register"
                className="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition duration-200 flex items-center justify-center"
              >
                üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </Link>
            </div>
          ) : (
            <div className="space-y-4">
              <button
                onClick={openWebApp}
                className="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition duration-200 flex items-center justify-center"
              >
                üîó –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram
              </button>
              
              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                <p className="text-yellow-800 text-sm">
                  üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram
                </p>
              </div>
            </div>
          )}

          <div className="mt-8 pt-6 border-t border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900 mb-3">
              –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:
            </h3>
            <ul className="text-left space-y-2 text-gray-600">
              <li className="flex items-center">
                <span className="text-green-500 mr-2">‚úì</span>
                –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∞–∫—Ü–∏–π
              </li>
              <li className="flex items-center">
                <span className="text-green-500 mr-2">‚úì</span>
                –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫–∞–ª—å—è–Ω—ã
              </li>
              <li className="flex items-center">
                <span className="text-green-500 mr-2">‚úì</span>
                –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
              </li>
            </ul>
          </div>
        </div>
      </div>
    </main>
  )
}
