// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  tg_id      BigInt   @unique
  first_name String
  last_name  String
  phone      String
  username   String?
  is_admin   Boolean  @default(false) @map("is_admin")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  stocks      Stock[]
  free_hookahs FreeHookah[]
  hookah_history HookahHistory[]
  admin_rights Admin? @relation("AdminUser")
  granted_admins Admin[] @relation("AdminGranter")
  confirmed_hookahs HookahHistory[] @relation("AdminConfirmed")

  @@map("users")
}

model Stock {
  id         Int      @id @default(autoincrement())
  user_id    Int
  stock_name String
  progress   Int      @default(0)
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  hookah_history HookahHistory[]

  @@map("stocks")
}

model FreeHookah {
  id         Int       @id @default(autoincrement())
  user_id    Int
  used       Boolean   @default(false)
  used_at    DateTime?
  created_at DateTime  @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("free_hookahs")
}

model HookahHistory {
  id         Int      @id @default(autoincrement())
  user_id    Int
  hookah_type String  // 'regular' or 'free'
  slot_number Int?    // Номер слота для обычных кальянов (1-5)
  stock_id   Int?     // ID акции для обычных кальянов
  admin_id   Int?     // ID админа, который подтвердил кальян
  scan_method String? // 'qr_code' or 'phone_digits'
  created_at DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  stock Stock? @relation(fields: [stock_id], references: [id], onDelete: SetNull)
  admin User? @relation("AdminConfirmed", fields: [admin_id], references: [id], onDelete: SetNull)

  @@map("hookah_history")
}

model Admin {
  id         Int      @id @default(autoincrement())
  user_id    Int      @unique
  granted_by Int      // ID админа, который выдал права
  created_at DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation("AdminUser", fields: [user_id], references: [id], onDelete: Cascade)
  granter User @relation("AdminGranter", fields: [granted_by], references: [id], onDelete: Cascade)

  @@map("admins")
}

model AdminList {
  id         Int      @id @default(autoincrement())
  tg_id      BigInt   @unique
  created_at DateTime @default(now()) @map("created_at")

  @@map("admin_list")
}